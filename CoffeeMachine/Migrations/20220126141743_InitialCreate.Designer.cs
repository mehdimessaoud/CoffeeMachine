// <auto-generated />
using System;
using CoffeMachine.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeMachine.Migrations
{
    [DbContext(typeof(CoffeeDbContext))]
    [Migration("20220126141743_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeMachine.Models.Badge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BadgeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("CoffeMachine.Models.DrinkType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DrinkTypes");
                });

            modelBuilder.Entity("CoffeMachine.Models.UserSelection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BadgeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DrinkTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("SugarQty")
                        .HasColumnType("int");

                    b.Property<bool>("UsePersonalMug")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BadgeId")
                        .IsUnique();

                    b.HasIndex("DrinkTypeId");

                    b.ToTable("ClientSelections");
                });

            modelBuilder.Entity("CoffeMachine.Models.UserSelection", b =>
                {
                    b.HasOne("CoffeMachine.Models.Badge", "Badge")
                        .WithOne("UserSelection")
                        .HasForeignKey("CoffeMachine.Models.UserSelection", "BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeMachine.Models.DrinkType", "DrinkType")
                        .WithMany()
                        .HasForeignKey("DrinkTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
